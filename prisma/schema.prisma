datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL_PRISMA")
  directUrl = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Money {
  id            String       @id @unique @default(cuid())
  amount        String?
  currencyCode  String?
  maxPriceRange PriceRange[] @relation(name: "maxPrice")
  minPriceRange PriceRange[] @relation(name: "minPrice")
}

model PriceRange {
  id              String    @id @unique @default(cuid())
  minVariantPrice Money     @relation(name: "minPrice", fields: [maxVariantId], references: [id])
  maxVariantPrice Money     @relation(name: "maxPrice", fields: [minVariantId], references: [id])
  maxVariantId    String
  minVariantId    String
  Product         Product[]
}

model ProductOption {
  id        String   @id @unique @default(cuid())
  name      String?
  values    String[]
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
}

model Image {
  id        String    @id @unique @default(cuid())
  url       String?
  altText   String?
  width     Int?
  height    Int?
  Product   Product?  @relation(name: "featuredImage")
  productId String?
  products  Product[]
}

model Product {
  id               String          @id @unique @default(cuid())
  handle           String?
  availableForSale Boolean?
  title            String?
  description      String?
  descriptionHtml  String?
  options          ProductOption[]
  priceRange       PriceRange?     @relation(fields: [priceRangeId], references: [id])
  featuredImage    Image?          @relation(name: "featuredImage", fields: [imageId], references: [id])
  images           Image[]
  priceRangeId     String?
  imageId          String?         @unique
}
